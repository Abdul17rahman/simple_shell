#include "main.h"
/**
 * _exit_command - this function closes the simple_shell when
 * @arg: pointer with the direction argument.
 * @lineptr: standar input string
 * @_exit: value of exit
 * Return: None
 */
void _exit_command(char **arg, char *lineptr, int _exit)
{
	int exit_status = 0;

	if (!arg[1])
	{
		free(lineptr);
		free(arg);
		exit(_exit);
	}
	exit_status = atoi(arg[1]);

	free(lineptr);
	free(arg);
	exit(exit_status);
}

/**
 *_getenv - function to get all env
 *@env: enviroment
 *Return: 0
 */

void _getenv(char **env)
{
	size_t run = 0;

	while (env[run])
	{
		write(STDOUT_FILENO, env[run], _strlen(env[run]));
		write(STDOUT_FILENO, "\n", 1);
		run++;
	}

/**
 * cd_builtin - This funtion changes the current working directory
 * @path: The path the directory to changes
 * @current_path: The current working directory
 * Return: 0 on success, -1 on failure
 */
int cd_builtin(char *path, char *current_path)
{
	int status;

	if (path == NULL)
	{
		char *homedirectory = getenv("HOME");
		if (homedirectory == NULL)
		{
			fprintf(stderr, "cd: No HOME directory set\n");
			return -1;
			}
			status = chdir(homedirectory);
			}
			else if (strcmp(path, "-") == 0)
			{
		/* Change to the previous working directory */
				char *previousdirectory = getenv("OLDPWD");
				if (previousdirectory == NULL)
				{
					fprintf(stderr, "cd: OLDPWD not set\n");
					return -1;
					status = chdir(previousdirectory);
					}
					else
					{
		/* Change to the specified directory */
		status = chdir(path);
		}
		if (status != 0)
		{
			perror("cd");
			return -1;
			}

	/* Update the OLDPWD and PWD environment variables */
	setenv("OLDPWD", current_path, 1);
	char *new_path = getcwd(NULL, 0);
	setenv("PWD", new_path, 1);
	free(new_path);

	return 0;
}

}
